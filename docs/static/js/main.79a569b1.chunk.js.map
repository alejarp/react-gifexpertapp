{"version":3,"sources":["components/AddCatergory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFechGifs.js","GifExpertAppp.js","index.js"],"names":["AddCatergory","setcategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFechGifs","key","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAe,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB7C,OACI,0BAAMC,SAXS,SAACC,GAChBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IAE5BR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAkBO,OACpCN,EAAc,OAOZ,2BACEO,KAAK,OACLC,MAAOT,EACPU,SApBkB,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,Y,uBCNnBG,EAAO,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,6DAEXC,EAFW,0DAE4CC,UAAUH,GAFtD,sDAIEI,MAAMF,GAJR,cAIXG,EAJW,gBAKIA,EAAKC,OALT,uBAKVC,EALU,EAKVA,KACDC,EAAMD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAVxB,kBAgBVM,GAhBU,4CAAD,sDCAPO,EAAc,SAAC,GAAoB,IAAnBJ,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAIlC,OAFJc,QAAQC,IAAIN,EAAIC,EAAOV,GAGf,yBAAKgB,UAAU,QACX,yBAAKC,IAAKjB,EACLkB,IAAKR,IACV,2BAAIA,KCJHS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECFZ,SAACA,GAAc,IAAD,EACXd,mBAAS,CACnCqB,KAAK,GACLe,SAAQ,IAH6B,mBAC9BC,EAD8B,KACvBC,EADuB,KAqBrC,OAdAC,qBAAU,WACV1B,EAAQC,GAAU0B,MAAK,SAAAC,GACnBC,YAAW,WACXJ,EAAS,CACLjB,KAAKoB,EACLL,SAAQ,MAEb,UAED,CAACtB,IAKIuB,EDjBiBM,CAAY7B,GAA5Ba,EAF2B,EAEhCN,KAAYe,EAFoB,EAEpBA,QAMf,OACI,oCACC,4BAAKtB,GACLsB,GAAW,yCAEV,yBAAKJ,UAAU,YAGTL,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eAAaoB,IAAKpB,EAAIC,IAAQD,UElBrCqB,EAAc,WAAI,MAGK7C,mBAAS,CAAC,cAHf,mBAGxB8C,EAHwB,KAGZ/C,EAHY,KAW/B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAcA,cAAeA,IAC7B,6BAGA,4BAEQ+C,EAAWvB,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CACI8B,IAAM9B,EACNA,SAAUA,UCrBlCiC,IAASC,OAEJ,kBAAC,EAAD,MACDC,SAASC,eAAe,U","file":"static/js/main.79a569b1.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCatergory = ({setcategorias}) => {\r\n    \r\n    const  [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e)=>{\r\n        setInputValue( e.target.value);\r\n    }\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        \r\n        if(inputValue.trim().length>2)\r\n        {\r\n        setcategorias(cats =>[inputValue,...cats]);\r\n        setInputValue('');\r\n        }\r\n        //console.log('Submit hecho')\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit} >\r\n\r\n          <input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n\r\n          ></input>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCatergory.propTypes={\r\n    setcategorias:PropTypes.func.isRequired\r\n}\r\n\r\n","\r\n\r\nexport const getGifs=async(category)=>{\r\n\r\n    const url=`https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(category)}&api_key=TGaIJbo0JcN5yCWfiV3aqKXnlPIeusy4`;\r\n\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs =data.map( img => {\r\n        return {\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    //console.log (gifs);\r\n    //setImages(gifs);\r\n    return gifs;\r\n}\r\n  ","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\nconsole.log(id, title, url);\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={url}\r\n                 alt={title}  /> \r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { useFechGifs } from '../hooks/useFechGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n//import { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\nconst {data:images,loading}=useFechGifs(category);\r\n//console.log(data);\r\n//console.log(loading);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n         <h3>{category}</h3>  \r\n        {loading && <p>Loading...</p>}\r\n         \r\n        { <div className=\"car-grid\">         \r\n          \r\n          {\r\n                images.map(img =>(\r\n                    <GifGridItem key={img.id}{ ...img} />\r\n                    )\r\n                        \r\n                )}\r\n\r\n        </div> }\r\n        </>\r\n    )\r\n}\r\n","import {useState,useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFechGifs = (category) => {\r\n    const [state, setState] = useState({\r\n    data:[],\r\n    loading:true\r\n    });\r\n\r\n\r\n    useEffect(()=>{\r\n    getGifs(category).then(imgs=>{\r\n        setTimeout(() => {\r\n        setState({\r\n            data:imgs,\r\n            loading:false\r\n        });        \r\n    }, 3000);\r\n    } )\r\n    },[category]);\r\n\r\n\r\n    \r\n\r\n    return(state);\r\n}\r\n","import React ,{useState} from 'react';\r\nimport{AddCatergory} from './components/AddCatergory'\r\nimport {GifGrid } from './components/GifGrid.js'\r\n\r\n\r\nexport const GifExpertApp= ()=>{\r\n\r\n//const categorias= ['One Punch','Samurai X','Dragon Ball'];\r\nconst [categorias, setcategorias] = useState(['One Punch'])\r\n\r\n/*\r\nconst handleAdd=()=>{\r\n    setcategorias([...categorias],  'HunterXHunter');\r\n}\r\n*/\r\nconst nombre ='GifExpertApp';\r\nreturn (\r\n    <>\r\n        <h2>AddCatergory</h2>\r\n        <AddCatergory setcategorias={setcategorias} />    \r\n        <hr></hr>\r\n\r\n        \r\n        <ol>\r\n            {\r\n                categorias.map(category =>\r\n                    <GifGrid \r\n                        key ={category}\r\n                        category={category}></GifGrid>\r\n                )}\r\n        </ol>\r\n    </>\r\n)\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertAppp'\n\n\n\nReactDOM.render(\n\n     <GifExpertApp />,\n    document.getElementById('root')\n);\n\n//GifExpertAppp\n//"],"sourceRoot":""}